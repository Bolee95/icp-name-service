service: () -> {
    claim: (record {duration:nat64; name:text; extension:text}) -> (variant {Ok:text; Err:variant {DomainAlreadyClaimed:principal; DomainStillValid:principal; UnknownError:text; DomainReserved:principal; DomainOwnershipExpired:principal; InvalidDomainNameLength:nat8; DomainNotFound:text; InvalidDomainKey:text; InvalidDuration:nat64; InvalidDomainExtension:text; CallerNotDomainOwner:principal; CallerNotCanisterOwner:principal}});
    getCanisterOwner: () -> (principal) query;
    getDomain: (text) -> (variant {Ok:record {id:text; owner:principal; updatedAt:nat64; validUntil:nat64}; Err:variant {DomainAlreadyClaimed:principal; DomainStillValid:principal; UnknownError:text; DomainReserved:principal; DomainOwnershipExpired:principal; InvalidDomainNameLength:nat8; DomainNotFound:text; InvalidDomainKey:text; InvalidDuration:nat64; InvalidDomainExtension:text; CallerNotDomainOwner:principal; CallerNotCanisterOwner:principal}}) query;
    getDomainHistory: (text) -> (variant {Ok:vec record {owner:principal; createdAt:nat64; validUntil:nat64}; Err:variant {DomainAlreadyClaimed:principal; DomainStillValid:principal; UnknownError:text; DomainReserved:principal; DomainOwnershipExpired:principal; InvalidDomainNameLength:nat8; DomainNotFound:text; InvalidDomainKey:text; InvalidDuration:nat64; InvalidDomainExtension:text; CallerNotDomainOwner:principal; CallerNotCanisterOwner:principal}}) query;
    getIsClaimable: (text) -> (variant {Ok:bool; Err:variant {DomainAlreadyClaimed:principal; DomainStillValid:principal; UnknownError:text; DomainReserved:principal; DomainOwnershipExpired:principal; InvalidDomainNameLength:nat8; DomainNotFound:text; InvalidDomainKey:text; InvalidDuration:nat64; InvalidDomainExtension:text; CallerNotDomainOwner:principal; CallerNotCanisterOwner:principal}}) query;
    lookup: (text) -> (variant {Ok:principal; Err:variant {DomainAlreadyClaimed:principal; DomainStillValid:principal; UnknownError:text; DomainReserved:principal; DomainOwnershipExpired:principal; InvalidDomainNameLength:nat8; DomainNotFound:text; InvalidDomainKey:text; InvalidDuration:nat64; InvalidDomainExtension:text; CallerNotDomainOwner:principal; CallerNotCanisterOwner:principal}}) query;
    reserve: (record {name:text; wallet:principal; extension:text}) -> (variant {Ok:text; Err:variant {DomainAlreadyClaimed:principal; DomainStillValid:principal; UnknownError:text; DomainReserved:principal; DomainOwnershipExpired:principal; InvalidDomainNameLength:nat8; DomainNotFound:text; InvalidDomainKey:text; InvalidDuration:nat64; InvalidDomainExtension:text; CallerNotDomainOwner:principal; CallerNotCanisterOwner:principal}});
    reverseLookup: (principal) -> (variant {Ok:vec record {id:text; owner:principal; updatedAt:nat64; validUntil:nat64}; Err:variant {DomainAlreadyClaimed:principal; DomainStillValid:principal; UnknownError:text; DomainReserved:principal; DomainOwnershipExpired:principal; InvalidDomainNameLength:nat8; DomainNotFound:text; InvalidDomainKey:text; InvalidDuration:nat64; InvalidDomainExtension:text; CallerNotDomainOwner:principal; CallerNotCanisterOwner:principal}}) query;
    revoke: (text) -> (variant {Ok:text; Err:variant {DomainAlreadyClaimed:principal; DomainStillValid:principal; UnknownError:text; DomainReserved:principal; DomainOwnershipExpired:principal; InvalidDomainNameLength:nat8; DomainNotFound:text; InvalidDomainKey:text; InvalidDuration:nat64; InvalidDomainExtension:text; CallerNotDomainOwner:principal; CallerNotCanisterOwner:principal}});
    transfer: (text, principal) -> (variant {Ok:text; Err:variant {DomainAlreadyClaimed:principal; DomainStillValid:principal; UnknownError:text; DomainReserved:principal; DomainOwnershipExpired:principal; InvalidDomainNameLength:nat8; DomainNotFound:text; InvalidDomainKey:text; InvalidDuration:nat64; InvalidDomainExtension:text; CallerNotDomainOwner:principal; CallerNotCanisterOwner:principal}});
}
